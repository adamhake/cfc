/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MediaRouteImport } from './routes/media'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EventsSlugRouteImport } from './routes/events/$slug'

const MediaRoute = MediaRouteImport.update({
  id: '/media',
  path: '/media',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsSlugRoute = EventsSlugRouteImport.update({
  id: '/events/$slug',
  path: '/events/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/media': typeof MediaRoute
  '/events/$slug': typeof EventsSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/media': typeof MediaRoute
  '/events/$slug': typeof EventsSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/media': typeof MediaRoute
  '/events/$slug': typeof EventsSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/media' | '/events/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/media' | '/events/$slug'
  id: '__root__' | '/' | '/media' | '/events/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MediaRoute: typeof MediaRoute
  EventsSlugRoute: typeof EventsSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/media': {
      id: '/media'
      path: '/media'
      fullPath: '/media'
      preLoaderRoute: typeof MediaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/$slug': {
      id: '/events/$slug'
      path: '/events/$slug'
      fullPath: '/events/$slug'
      preLoaderRoute: typeof EventsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MediaRoute: MediaRoute,
  EventsSlugRoute: EventsSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
